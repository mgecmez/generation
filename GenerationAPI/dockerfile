#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS base
SHELL ["/bin/bash", "-c"]
RUN echo "$(openssl version)"
RUN openssl req \
-x509 \
-out localhost.crt \
-keyout localhost.key \
-newkey rsa:2048 \
-nodes \
-sha256 \
-subj "/CN=localhost" \
-extensions EXT \
-config <(printf "[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")
WORKDIR /app
# EXPOSE 80
# EXPOSE 443

FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build
WORKDIR /src
COPY Generation.sln ./
COPY Generation.Domain/*.csproj ./Generation.Domain/
COPY Generation.Dtos/*.csproj ./Generation.Dtos/
COPY Generation.Repository/*.csproj ./Generation.Repository/
COPY Generation.Service/*.csproj ./Generation.Service/
COPY Generation.Api/*.csproj ./Generation.Api/
COPY Generation.Api.IntegrationTest/*.csproj ./Generation.Api.IntegrationTest/
COPY Generation.Api.Test/*.csproj ./Generation.Api.Test/
COPY Generation.Domain.Test/*.csproj ./Generation.Domain.Test/
COPY Generation.Repository.Test/*.csproj ./Generation.Repository.Test/
COPY Generation.Service.Test/*.csproj ./Generation.Service.Test/

RUN dotnet restore
COPY . .
WORKDIR /src/Generation.Domain
RUN dotnet build -c Release -o /app

WORKDIR /src/Generation.Dtos
RUN dotnet build -c Release -o /app

WORKDIR /src/Generation.Repository
RUN dotnet build -c Release -o /app

WORKDIR /src/Generation.Service
RUN dotnet build -c Release -o /app

WORKDIR /src/Generation.Api
RUN dotnet build -c Release -o /app

WORKDIR /src/Generation.Api.IntegrationTest
RUN dotnet build -c Release -o /app

WORKDIR /src/Generation.Api.Test
RUN dotnet build -c Release -o /app

WORKDIR /src/Generation.Domain.Test
RUN dotnet build -c Release -o /app

WORKDIR /src/Generation.Repository.Test
RUN dotnet build -c Release -o /app

WORKDIR /src/Generation.Service.Test
RUN dotnet build -c Release -o /app

FROM build AS publish
RUN dotnet publish -c Release -o /app

FROM base AS final
WORKDIR /app
COPY --from=publish /app .
ENV ASPNETCORE_URLS=http://+:5005
ENTRYPOINT ["dotnet", "Generation.Api.dll"]

# COPY ["Generation.Api/Generation.Api.csproj", "Generation.Api/"]
# RUN dotnet restore "Generation.Api/Generation.Api.csproj"
# COPY . .
# WORKDIR "/src/Generation.Api"
# RUN dotnet build "Generation.Api.csproj" -c Release -o /app/build

# FROM build AS publish
# RUN dotnet publish "Generation.Api.csproj" -c Release -o /app/publish

# FROM base AS final
# WORKDIR /app
# COPY --from=publish /app/publish .
# ENTRYPOINT ["dotnet", "Generation.Api.dll"]

# FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build-env
# # SHELL ["/bin/bash", "-c"]
# # RUN echo "$(openssl version)"
# # RUN openssl req \
# # -x509 \
# # -out localhost.crt \
# # -keyout localhost.key \
# # -newkey rsa:2048 \
# # -nodes \
# # -sha256 \
# # -subj "/CN=localhost" \
# # -extensions EXT \
# # -config <(printf "[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")

# WORKDIR /app

# COPY ./Generation.Api/ ./
# RUN dotnet restore Generation.Api.csproj

# COPY ./Generation.Api/ ./
# RUN dotnet build Generation.Api.csproj -c Release -o /app/build

# COPY . ./
# RUN dotnet publish Generation.sln -c Release -o out

# FROM mcr.microsoft.com/dotnet/sdk:5.0
# WORKDIR /app
# COPY --from=build-env /app/out .
# ENV ASPNETCORE_URLS=http://+:5005  
# ENTRYPOINT ["dotnet", "Generation.Api.dll"]